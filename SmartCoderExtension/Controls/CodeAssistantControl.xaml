<UserControl x:Class="SmartCoderExtension.Controls.CodeAssistantControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SmartCoderExtension.ViewModels" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             d:DataContext="{d:DesignInstance Type=local:CodeAssistantViewModel}"
             mc:Ignorable="d"
             Height="400" Width="600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>

        <Expander Header="分支管理" IsExpanded="True" Margin="0,0,500,0">
            <StackPanel>
                <TextBlock Text="当前分支：主分支" Width="68" Height="30" />
                <Button Content="查看历史记录" Width="66" Height="30" />
            </StackPanel>
        </Expander>


        <!-- Prompt 输入框 -->
        <TextBox x:Name="txtPrompt" Grid.Row="0" Margin="5"
                 AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>

        <!-- 生成代码按钮 -->
        <Button Grid.Row="1" Content="{Binding Path=GlyphButtonName, FallbackValue='生成代码'}" 
                Margin="5" Click="Generate_Click" Height="30"/>

        <!-- 显示生成的代码 -->
        <TextBox x:Name="txtResult" Grid.Row="2" Margin="5"
                 IsReadOnly="True" VerticalScrollBarVisibility="Auto"
                 FontFamily="Consolas" FontSize="12"/>

        <!-- 追踪记录列表 -->
        <ListView x:Name="TrackingListView" Background="LightGray">
            <!-- 需要根据 ViewModel 绑定背景色 -->
        </ListView>
        <ListView ItemsSource="{Binding TrackingItems}" Background="LightGray" />
        <!-- Rectangle 旋转效果 -->
        <Rectangle>
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="Red" Offset="{Binding Path=SomeOffset}" />
                    <GradientStop Color="Blue" Offset="1" />
                    <GradientStop Offset="{Binding ActualHeight}" />

                </LinearGradientBrush>
            </Rectangle.Fill>
            <Rectangle.RenderTransform>
                <RotateTransform Angle="{Binding RotateAngle}" />
            </Rectangle.RenderTransform>
        </Rectangle>
    </Grid>
</UserControl>
